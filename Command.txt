## Code args
Parameters for running the code are enclosed in {}. The take the following values:
- dataset-name ==> ['Cora', 'Cora_ml', 'Bitcoin', 'Citeseer', 'credit', 'Pubmed', 'CoraPrivate']
- explainer ==> ['grad', 'gradinput', 'zorro-soft', 'zorro-hard', 'graphlime', 'gnn-explainer']
- eps ==> [0.0001, 0.001, 0.01, 0.1, 0.2, 0.4, 0.6, 0.8, 1]

-model_dict = {"GCN":GCNNet,"GAT":GATNet,"GIN":GINConvNet,"APPNP":APPNP2Net}
-explainer_dict ={"Grad":grad_node_explanation,"GradInput":gradinput_node_explanation,"GraphLime":GLIME,"GNNExplainer":GNNExplainer, hard_zorro, soft_zorro}

python explanations.py --model GCN --dataset CoraPrivate --explainer GraphLime --save_exp
python main.py -model end2end -dataset coraprivate -explanation_method graphlime -use_exp_as_reconstruction_loss 1 -ntrials 10 -attack_type gsef

python main.py -model pairwise_sim -dataset cora -explanation_method graphlime -ntrials 10 -attack_type explainsim
python main.py -model end2end -dataset cora -explanation_method graphlime -ntrials 10 -attack_type gse

python3 main.py -model end2end -dataset coraprivate -explanation_method graphlime -use_exp_as_reconstruction_loss 1 -ntrials 10 -attack_type gsef

python main.py -model pairwise_sim -dataset coraprivate -ntrials 1 -attack_type featuresim

python main.py -model pairwise_sim -dataset cora -ntrials 1 -attack_type featuresim

python main.py -model end2end -dataset coraprivate -ntrials 1 -attack_type slaps

python main.py -model fidelity -get_fidelity 1 -dataset coraprivate -explanation_method graphlime -ntrials 1 -use_defense 5 -epsilon 0.01

python main.py -model exp_intersection -get_intersection 1 -dataset coraprivate -explanation_method graphlime -ntrials 1 -use_defense 5 -epsilon 0.01